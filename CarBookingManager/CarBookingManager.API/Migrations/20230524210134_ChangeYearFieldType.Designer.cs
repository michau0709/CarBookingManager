// <auto-generated />
using System;
using CarBookingManager.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarBookingManager.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230524210134_ChangeYearFieldType")]
    partial class ChangeYearFieldType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarBookingManager.API.Models.Car", b =>
                {
                    b.Property<string>("RegistrationNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Fuel")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Power")
                        .HasColumnType("float");

                    b.Property<decimal>("Price")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("RegistrationNo");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarBookingManager.API.Models.Customer", b =>
                {
                    b.Property<string>("PersonalNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonalNo");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("CarBookingManager.API.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfReservation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("PersonalNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RegistrationNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PersonalNo");

                    b.HasIndex("RegistrationNo");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("CarBookingManager.API.Models.Reservation", b =>
                {
                    b.HasOne("CarBookingManager.API.Models.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("PersonalNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarBookingManager.API.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("RegistrationNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CarBookingManager.API.Models.Customer", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
